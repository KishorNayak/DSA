int minDistance(string word1, string word2) {
        int n =word1.size();
        int m =word2.size();
        memset(dp, 0, sizeof(dp));
        // return solve(word1,word2,0,0);
        for (int i = 0; i <= m; i++)
            dp[n][i] = i;
        for (int i = 0; i <= n; i++)
            dp[i][m] = i;
        for (int i = n - 1; i >= 0; i--) {
            for (int j = m - 1; j >= 0; j--) {
                if (word1[i] == word2[j]) {
                    dp[i][j] = dp[i+1][j+1];
                } else {
                    int c1 = 1 + dp[i][j+1];
                    int c2 = 1 + dp[i+1][j];
                    int c3 = 1 + dp[i+1][j+1];
                    dp[i][j]= min(c1, min(c2, c3));
                }
            }
        }
                return dp[0][0];
    }
