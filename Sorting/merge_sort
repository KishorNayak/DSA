void merge(int arr[], int l, int m, int r)
    {
         int p1=l,p2=m+1;
         vector<int>temp;
         while(p1<=m && p2<=r){
             if(arr[p1]<=arr[p2]){
                 temp.push_back(arr[p1]);
                 p1++;
             }
             else{
                 temp.push_back(arr[p2]);
                 p2++;
             }
         }
         while(p1<=m)temp.push_back(arr[p1]),p1++;
         while(p2<=r)temp.push_back(arr[p2]),p2++;
         
         for(int i=0;i<temp.size();i++){
             arr[l+i] = temp[i];
         }
    }
    void mergeSort(int arr[], int l, int r){
        if(l>=r)return;
        int mid = (l+r)>>1;
        mergeSort(arr,l,mid);
        mergeSort(arr,mid+1,r);
        merge(arr,l,mid,r);
    }
